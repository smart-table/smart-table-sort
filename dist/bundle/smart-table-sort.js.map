{"version":3,"file":"smart-table-sort.js","sources":["../../node_modules/smart-table-operators/dist/bundle/module.js","../../node_modules/smart-table-json-pointer/dist/bundle/module.js","../src/index.js"],"sourcesContent":["const swap = (f) => (a, b) => f(b, a);\nconst compose = (first, ...fns) => (...args) => fns.reduce((previous, current) => current(previous), first(...args));\nconst curry = (fn, arityLeft) => {\n    const arity = arityLeft || fn.length;\n    return (...args) => {\n        const argLength = args.length || 1;\n        if (arity === argLength) {\n            return fn(...args);\n        }\n        const func = (...moreArgs) => fn(...args, ...moreArgs);\n        return curry(func, arity - args.length);\n    };\n};\nconst apply = (fn) => (...args) => fn(...args);\nconst tap = (fn) => arg => {\n    fn(arg);\n    return arg;\n};\n\nexport { swap, compose, curry, apply, tap };\n","const pointer = (path) => {\n    const parts = path.split('.');\n    const partial = (obj = {}, parts = []) => {\n        const p = parts.shift();\n        const current = obj[p];\n        return (current === undefined || current === null || parts.length === 0) ?\n            current : partial(current, parts);\n    };\n    const set = (target, newTree) => {\n        let current = target;\n        const [leaf, ...intermediate] = parts.reverse();\n        for (const key of intermediate.reverse()) {\n            if (current[key] === void 0) {\n                current[key] = {};\n                current = current[key];\n            }\n        }\n        current[leaf] = newTree;\n        return target;\n    };\n    return {\n        get(target) {\n            return partial(target, [...parts]);\n        },\n        set\n    };\n};\n\nexport { pointer };\n","import { swap } from 'smart-table-operators';\nimport { pointer } from 'smart-table-json-pointer';\nconst defaultComparator = (a, b) => {\n    if (a === b) {\n        return 0;\n    }\n    if (a === undefined) {\n        return 1;\n    }\n    if (b === undefined) {\n        return -1;\n    }\n    return a < b ? -1 : 1;\n};\nexport var SortDirection;\n(function (SortDirection) {\n    SortDirection[\"ASC\"] = \"asc\";\n    SortDirection[\"DESC\"] = \"desc\";\n    SortDirection[\"NONE\"] = \"none\";\n})(SortDirection || (SortDirection = {}));\nconst sortByProperty = (prop, comparator) => {\n    const propGetter = pointer(prop).get;\n    return (a, b) => comparator(propGetter(a), propGetter(b));\n};\nexport const defaultSortFactory = (conf) => {\n    const { pointer, direction = \"asc\" /* ASC */, comparator = defaultComparator } = conf;\n    if (!pointer || direction === \"none\" /* NONE */) {\n        return (array) => [...array];\n    }\n    const orderFunc = sortByProperty(pointer, comparator);\n    const compareFunc = direction === \"desc\" /* DESC */ ? swap(orderFunc) : orderFunc;\n    return (array) => [...array].sort(compareFunc);\n};\n"],"names":["SortDirection"],"mappings":"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"}